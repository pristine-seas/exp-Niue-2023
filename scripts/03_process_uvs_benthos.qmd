---
title: "Niue - Benthic surveys"
author: "Juan Mayorga"
number-sections: true
date: today
format: 
  html:
    self-contained: true
    code-fold: true
    toc: true
    toc-location: left
---

```{r, message=F, warning = F, fig.width = 10, fig.height = 10}
library(paletteer)
library(leaflet)
library(reactable)
library(gt)
library(tidyverse)

knitr::opts_chunk$set(eval = F, warning = F, message = F, include = F, echo = F)

PristineSeasR::set_ps_paths(email = "marine.data.science@ngs.org")

exp_path <- file.path(ps_science_path, "expeditions", "Niue-2023")

ps_data_path <- file.path(ps_science_path, "datasets/")

ggthemr::ggthemr('solarized')

uvs_meta <- readxl::read_xlsx(file.path(exp_path,"data/primary/raw/fish", 
                                        "NIU_2023_uvs_fish_fieldbook_AMF.xlsx"),
                                  sheet = "uvs_meta")
```

# Point contacts

## QA/QC

```{r}
pc_transects <- readxl::read_xlsx(file.path(exp_path,
                                            "data/primary/raw/benthos/NIUE_2023_Transsects-rough.xlsx"),
                                  n_max = 2, 
                                  col_names = FALSE) %>%
  janitor::clean_names() %>%
  column_to_rownames(var = "x1") %>% 
  t() %>% 
  as_tibble() %>% 
  remove_rownames() %>% 
  janitor::clean_names() |> 
  set_names(c("site_number", "depth_m")) |> 
  mutate(ps_site_id = paste0("NIU_uvs_",
                             formatC(as.numeric(str_extract(site_number, "[0-9]+")), width = 2,flag = 0))) |>
  group_by(ps_site_id, depth_m) |> 
  mutate(transect = LETTERS[row_number()]) |> 
  ungroup() |> 
  group_by(ps_site_id) |> 
  mutate(depth_m = as.numeric(depth_m),
         depth_strata = if_else(depth_m == min(depth_m), "Shallow", "Deep")) |> 
  ungroup() |> 
  select(ps_site_id, depth_strata, depth_m, transect) 

pc_transects$depth_strata[pc_transects$depth_m < 5] <- "Supershallow"
```

```{r read_benthos_data}
pc_data <- readxl::read_xlsx(file.path(exp_path,
                                       "data/primary/raw/benthos/NIUE_2023_Transsects-rough.xlsx"),
                             skip = 3, 
                             col_names = F, 
                             range = "C5:KL46") %>% 
  janitor::clean_names() %>% 
  filter(!is.na(x1), x1 != "TOTAL") %>% 
  column_to_rownames(var = "x1") %>% 
  t() %>% 
  as_tibble()

pc_data <- pc_transects |> 
  cbind(pc_data) 

pc_data <- pc_data %>% 
  pivot_longer(-c(ps_site_id, depth_strata, depth_m, transect), 
               names_to = "taxon", 
               values_to = "pts") %>% 
  replace_na(list(pts = 0)) %>% 
  group_by(ps_site_id, depth_strata, depth_m, transect, taxon) %>% 
  summarise(pts = sum(pts)) %>% 
  ungroup() 
```

```{r}
hard_corals <- readxl::read_xlsx(file.path(exp_path,
                                       "data/primary/raw/benthos/Niue_2023_Corals.xlsx"),
                             skip = 3, 
                             col_names = F, 
                             range = "A5:KJ66") %>% 
  janitor::clean_names() %>% 
  filter(!is.na(x1), x1 != "TOTAL") %>% 
  column_to_rownames(var = "x1") %>% 
  t() %>% 
  as_tibble()

pc_data_corals <- pc_transects |> 
  cbind(hard_corals) |> 
  pivot_longer(-c(ps_site_id, depth_strata, depth_m, transect), 
               names_to = "taxon", 
               values_to = "pts") %>% 
  mutate(pts = as.numeric(pts)) |> 
  replace_na(list(pts = 0)) %>% 
  group_by(ps_site_id, depth_strata, depth_m, transect, taxon) %>% 
  summarise(pts = sum(pts)) %>% 
  ungroup()

hard_coral_factor <- pc_data |> 
  filter(taxon == "Hard coral") |> 
  group_by(ps_site_id, depth_strata, transect) |> 
  summarize(coral_pts_kike = sum(pts)) |> 
  left_join(pc_data_corals |> 
              group_by(ps_site_id, depth_strata, transect) |> 
              summarize(coral_pts_molly = sum(pts))) |> 
  mutate(factor = if_else(coral_pts_kike > 0, coral_pts_kike/coral_pts_molly, 0))

hard_coral_factor |> 
  filter(coral_pts_kike != coral_pts_molly)

hard_coral_factor |> 
  filter(coral_pts_kike == 0 | coral_pts_molly == 0)

pc_data_corals <- pc_data_corals |> 
  mutate(pts = if_else(taxon == "Scleractinia spp." & 
                         ps_site_id == "NIU_uvs_31" & 
                         depth_strata == "Shallow" & 
                         transect == "A",
                       7,
                       pts))

hard_coral_factor <- pc_data |> 
  filter(taxon == "Hard coral") |> 
  group_by(ps_site_id, depth_strata, transect) |> 
  summarize(coral_pts_kike = sum(pts)) |> 
  left_join(pc_data_corals |> 
              group_by(ps_site_id, depth_strata, transect) |> 
              summarize(coral_pts_molly = sum(pts))) |> 
  mutate(factor = if_else(coral_pts_kike > 0, coral_pts_kike/coral_pts_molly, 0))

hard_coral_factor |> 
  filter(coral_pts_kike == 0 | coral_pts_molly == 0)

pc_data_corals <- pc_data_corals |> 
  left_join(hard_coral_factor |> 
              select(ps_site_id, depth_strata, transect, factor)) |> 
  mutate(pts = pts*factor) |> 
  select(-factor)
```

```{r}
pc_data <- pc_data |> 
  filter(taxon != "Hard coral") |>
  bind_rows(pc_data_corals) |> 
  group_by(ps_site_id, depth_strata, depth_m, transect) %>% 
  mutate(p_cover = round(100*pts/sum(pts), 4)) %>% 
  ungroup() 

pc_data |> 
  group_by(ps_site_id, depth_strata, transect) |> 
  summarize(sum(pts))
```

```{r benthos_qa/qc}
pc_data %>% 
  group_by(ps_site_id, depth_strata, transect) %>% 
  summarise(p_cover = round(sum(p_cover)),
            sum_pts = sum(pts)) %>% 
  mutate_if(is.numeric, round) |> 
  filter(p_cover != 100 | sum_pts != 50)

pc_transects %>% 
  group_by(ps_site_id, depth_m) %>% 
  filter(n_distinct(transect) != 5)

pc_data %>% 
  filter(is.na(taxon))

pc_data <- pc_data |> 
  filter(!(ps_site_id == "NIU_uvs_07" & transect %in% c("D", "E")))
```

```{r}
pc_taxa <- readxl::read_xlsx(file.path(exp_path, "data/primary/raw/benthos/NIUE_2023_Transsects-rough.xlsx"),
                             skip = 3, 
                             col_names = F, 
                             range = "B5:C46") |> 
  janitor::clean_names() %>%
  set_names(c("group", "taxon")) |> 
  mutate(group = if_else(group != "CCA", str_to_sentence(group), group)) |> 
  arrange(taxon) |> 
  filter(!taxon %in% c("Barren","Sand","Turf", "Hard coral"))

pc_taxa <- pc_taxa |> 
  bind_rows(pc_data_corals |> 
              distinct(taxon) |> 
              mutate(group = "Hard coral"))

pc_taxa |> 
  group_by(group) |> 
  summarize(n_distinct(taxon))
```

```{r}
benthos_taxa <- bdc::bdc_clean_names(pc_taxa$taxon) %>% 
  janitor::clean_names() %>% 
  select(taxon = scientific_name, 
         taxon_clean = names_clean) %>% 
  mutate(taxon_clean = coalesce(taxon_clean, 
                                taxadb::clean_names(taxon, lowercase = F))) %>% 
  distinct(taxon, taxon_clean) |> 
  mutate(taxon_clean = str_remove_all(taxon_clean,
                                      "unidentified") |> 
           str_squish())
  
benthos_taxa$taxon_clean[str_detect(benthos_taxa$taxon, "CCA")] <- "Corallinales"
benthos_taxa$taxon_clean[str_detect(benthos_taxa$taxon, "Hidraria unidentified")] <- "Hydrozoa"

benthos_taxa <- benthos_taxa %>% 
  left_join(pc_taxa)

benthos_taxa |> 
  filter(taxon != taxon_clean)
```

```{r gnr_benthos}
algae_taxa <- benthos_taxa |> filter(str_detect(group, "algae|Turf|CCA"))

algae_gnr <-   taxize::gnr_resolve(algae_taxa$taxon_clean, 
                      canonical = F,
                      with_canonical_ranks = T,
                      data_source_ids = c(195)) %>% # ALGAE BASE
  filter(submitted_name != matched_name2) %>% 
  distinct(submitted_name, score, taxon_gnr = matched_name2)

not_algae_gnr <- benthos_taxa %>% 
  filter(!taxon_clean %in% algae_taxa$taxon_clean) %>% 
  pull(taxon_clean) %>% 
  taxize::gnr_resolve(canonical = F,
                      with_canonical_ranks = T,
                      data_source_ids = c(9)) %>% # WORMS 
  filter(submitted_name != matched_name2) %>% 
  distinct(submitted_name, score, taxon_gnr = matched_name2)

benthos_taxa <- benthos_taxa %>% 
  left_join(not_algae_gnr,
            by = c("taxon_clean" = "submitted_name")) %>% 
  mutate(taxon_gnr = coalesce(taxon_gnr, taxon_clean)) %>% 
  select(-score) %>% 
  left_join(algae_gnr %>% 
              rename(taxon_gnr_algae = taxon_gnr),
            by = c("taxon_clean" = "submitted_name")) %>% 
  mutate(taxon_gnr = coalesce(taxon_gnr_algae, taxon_gnr)) %>% 
  select(-score, -taxon_gnr_algae) 

benthos_taxa |> filter(taxon_gnr != taxon_clean)
```

```{r taxonomy_benthos}
taxonomy_worms <- benthos_taxa$taxon_gnr %>% 
  furrr::future_map(purrr::safely(worrms::wm_records_names))
  
taxonomy_worms <- transpose(taxonomy_worms)[["result"]] %>% 
  bind_rows() %>% 
  janitor::clean_names() %>% 
  filter(!is.na(scientificname)) %>% 
  mutate(rank = str_to_lower(rank),
         taxon_id = if_else(!is.na(valid_aphia_id),
                              paste0("WORMS:", valid_aphia_id),
                              NA_character_)) %>% 
  select(taxon_gnr = scientificname, status, taxon_valid_name = valid_name, taxon_rank = rank, taxon_id, taxon_authority = valid_authority, kingdom, phylum, class, order, family, genus) %>% 
  distinct() 

duped_taxa_worms <- taxonomy_worms %>% 
  janitor::get_dupes(taxon_gnr) 

deduped_taxa_worms <- duped_taxa_worms %>% 
  filter(status %in% c("accepted", "junior subjective synonym")) %>% 
  select(-dupe_count)

deduped_taxa_worms <- deduped_taxa_worms |> 
  filter(!(taxon_gnr == "Turbinaria" & status != "junior subjective synonym"))

taxonomy_worms <- taxonomy_worms %>% 
  group_by(taxon_gnr) %>% 
  filter(n() <= 1) %>% # remove duplicates
  bind_rows(deduped_taxa_worms) # add deduped

taxonomy_worms %>% 
  filter(taxon_valid_name != taxon_gnr) 

benthos_taxa <- benthos_taxa %>% 
  left_join(taxonomy_worms) %>% 
  select(-taxon_clean)

benthos_taxa |> 
  filter(is.na(class))

benthos_taxa |> 
  janitor::get_dupes(taxon)
```

```{r save_benthos}
write_csv(benthos_taxa,
          file.path(exp_path, "data/primary/processed", "NIU_2023_uvs_benthos_taxa.csv"))

write_csv(pc_data,
          file.path(exp_path, "data/primary/processed", "NIU_2023_uvs_benthic_contacts.csv"))
```


## Diversity

```{r eval = T, include = T}
benthos_taxa <- read_csv(file.path(exp_path, "data/primary/processed", "NIU_2023_uvs_benthos_taxa.csv"))

pc_data <- read_csv(file.path(exp_path, "data/primary/processed", "NIU_2023_uvs_benthic_contacts.csv"))

benthic_groups <- c(unique(benthos_taxa$group), "Barren", "Sediment") 

pc_group_palette <- as.character(paletteer_d("ggsci::category20_d3", 
                                             n = length(benthic_groups), 
                                             direction = 1)) 

names(pc_group_palette) <- benthic_groups

benthos_taxa |> 
  group_by(class, family) |> 
  summarize(n_taxa = n_distinct(taxon)) |> 
  arrange(desc(n_taxa)) |> 
  filter(!is.na(family)) |> 
  ggplot(aes(area = n_taxa, 
             label = paste(family, n_taxa, sep = "\n"),
             fill = class,
             subgroup = class)) +
  treemapify::geom_treemap(show.legend = T, colour = "white")+
  treemapify::geom_treemap_text(colour = "white", 
                                place = "middle", 
                                reflow = T, 
                                min.size = 3)+
  treemapify::geom_treemap_subgroup_border(colour = "white", size = 4)+
  labs(fill = "", title = "")+
  ggthemes::theme_fivethirtyeight()+
  scale_fill_manual(values = pc_group_palette)+
  scale_fill_paletteer_d("ggthemr::light")+
  bbplot::bbc_style()+
  guides(fill = guide_legend(nrow = 3, byrow = TRUE))+
  theme(legend.position = "bottom")

ggsave(file.path(exp_path, "figures/uvs_pc_diversity_treemap.png"), width = 10)
```


```{r eval = T, include = T}
cover_by_strata <- pc_data |> 
  group_by(ps_site_id, depth_strata, depth_m, taxon) |> 
  summarise(p_cover = mean(p_cover),
            pts = sum(pts)) |> 
  ungroup() 

cover_by_station <- pc_data |> 
  group_by(ps_site_id, taxon) |> 
  summarise(p_cover = mean(p_cover),
            pts = sum(pts)) |> 
  ungroup()
```

```{r eval = T, include = T}
cover_by_station |> 
  left_join(benthos_taxa) |> 
  left_join(uvs_meta) |> 
  filter(!is.na(group)) |> 
  group_by(island,  group, class) |> 
  summarize(n_taxa = n_distinct(taxon[p_cover > 0])) |> 
  pivot_wider(names_from = island, values_from = n_taxa) |> 
  ungroup() |> 
  gt(rowname_col = "group") |> 
  tab_header(title = "Number of species in benthic transects by class and location")
```

```{r eval = T, include = T }
cover_by_station |> 
  inner_join(benthos_taxa) |> 
  left_join(uvs_meta |> 
              distinct(ps_site_id, island, habitat, exposure)) |> 
  group_by(island, taxon) |> 
  summarise(n_sites = n_distinct(ps_site_id[p_cover > 0])) |> 
  left_join(uvs_meta |> 
              group_by(island) |> 
              summarize(island_site = n_distinct(ps_site_id))) |> 
  mutate(freq_obs = round(100*n_sites/island_site)) |> 
  select(-n_sites, -island_site) |> 
  pivot_wider(names_from = island, values_from = freq_obs) |> 
  gt::gt() |> 
  gt::tab_header(title = "Frequency of observation (% sites) by taxa and location") |> 
  opt_interactive()
```

```{r eval = T, include = T}
cover_by_strata |> 
  left_join(benthos_taxa) |> 
  group_by(ps_site_id, depth_strata, group) |> 
  summarize(n_taxa = n_distinct(taxon[p_cover > 0])) |> 
  left_join(uvs_meta) |> 
  filter(island == "Niue") |> 
  ggplot()+
  geom_boxplot(aes(depth_strata, n_taxa, fill = fct_reorder(group, n_taxa)))+
  ggthemes::theme_fivethirtyeight()+
  scale_fill_manual(values = pc_group_palette)+
  scale_fill_paletteer_d("ggthemr::light")+
  labs(fill = "", title = "Diversity of species by depth strata and group", 
       subtitle = "Niue")

ggsave(file.path(exp_path, "figures/uvs_pc_diversity_by_depth_and_group_Beverigde.png"), width = 10)

cover_by_strata |> 
  left_join(benthos_taxa) |> 
  group_by(ps_site_id, depth_strata, group) |> 
  summarize(n_taxa = n_distinct(taxon[p_cover > 0])) |> 
  left_join(uvs_meta) |> 
  filter(island == "Beveridge") |> 
  ggplot()+
  geom_boxplot(aes(depth_strata, n_taxa, fill = fct_reorder(group, n_taxa)))+
  ggthemes::theme_fivethirtyeight()+
  scale_fill_manual(values = pc_group_palette)+
  scale_fill_paletteer_d("ggthemr::light")+
  labs(fill = "", title = "Diversity of species by depth strata and group", 
       subtitle = "Beveridge")

ggsave(file.path(exp_path, "figures/uvs_pc_diversity_by_depth_and_group_Niue.png"), width = 10)

```

## Cover

```{r eval = T, include = T}
cover_by_station_and_group <- cover_by_station %>% 
  left_join(benthos_taxa %>% 
              select(taxon, group, order, class)) |>
  mutate(group = coalesce(group, taxon)) |> 
  group_by(ps_site_id, group) %>% 
  summarize(p_cover = round(sum(p_cover), 3)) %>% 
  ungroup()

cover_by_strata_and_group <- cover_by_strata %>% 
  left_join(benthos_taxa %>% 
              select(taxon, group, order, class)) |>
  mutate(taxon = coalesce(taxon, group),
         order = coalesce(order, group),
         group = coalesce(group, taxon)) |> 
  group_by(ps_site_id, depth_m, depth_strata, group) %>% 
  summarize(p_cover = round(sum(p_cover), 3)) %>% 
  ungroup()
```

```{r eval = T, include = T}
cover_by_station_and_group |> 
  left_join(uvs_meta |> 
              distinct(ps_site_id, island, habitat, exposure)) |> 
  group_by(island, group) |> 
  summarize(sd = sd(p_cover),
            p_cover = mean(p_cover)) |> 
  mutate_if(is.numeric, round, 2) |> 
  mutate(p_cover = paste(p_cover, paste0("(",sd, ")"))) |> 
  select(-sd) |> 
  pivot_wider(names_from = island,  values_from = p_cover) |> 
  gt::gt(rowname_col = "group") |> 
  gt::tab_header(title ="Average benthic cover (%) by group and region",
                 subtitle = "Standard deviation in parenthesis")
```

```{r eval = T, include = T}
cover_by_station_and_group |> 
  left_join(uvs_meta |> distinct(ps_site_id, island, habitat, exposure)) |> 
  group_by(island, group) |> 
  summarize(p_cover = round(mean(p_cover), 2)) |> 
  ungroup() |> 
  ggplot()+
  geom_col(aes(island, p_cover, fill = fct_reorder(group,p_cover, max)))+
  ggthemes::theme_fivethirtyeight()+
  scale_fill_paletteer_d("ggthemr::light")+
  labs(fill = "", 
       title = "Average benthic cover by group and region")

ggsave(file.path(exp_path, "figures/uvs_pc_cover_by_group_and_region.png"), width = 10)

```

```{r eval = T, include = T}
cover_by_strata_and_group |> 
  left_join(uvs_meta |> distinct(ps_site_id, island, habitat, exposure)) |> 
  #filter(island == "Beveridge") |> 
  group_by(island, depth_strata, group) |> 
  summarize(p_cover = round(mean(p_cover), 2)) |> 
  ungroup() |> 
  ggplot()+
  geom_col(aes(depth_strata, p_cover, fill = fct_reorder(group,p_cover, max)))+
  ggthemes::theme_fivethirtyeight()+
  scale_fill_paletteer_d("ggthemr::light")+
  labs(fill = "", 
       title = "Average benthic cover by group and depth strata")+
  facet_wrap("island")

ggsave(file.path(exp_path, "figures/uvs_pc_cover_by_group_and_region_and_depth_strata.png"), width = 10)
```
 
```{r eval = T, include = T}
cover_by_strata_and_group |> 
  left_join(uvs_meta |> distinct(ps_site_id, island, habitat, exposure)) |> 
  filter(island == "Beveridge") |> 
  group_by(depth_strata, group, exposure) |> 
  summarize(p_cover = round(mean(p_cover), 2)) |> 
  ungroup() |> 
  ggplot()+
  geom_col(aes(depth_strata, p_cover, fill = fct_reorder(group,p_cover, max)))+
  facet_wrap("exposure")+
  ggthemes::theme_fivethirtyeight()+
  scale_fill_paletteer_d("ggthemr::light")+
  labs(fill = "", 
       title = "Average benthic cover by group, depth strata, and exposure",
       subtitle = "Beveridge reef")

ggsave(file.path(exp_path, "figures/uvs_pc_cover_Beveridge_by_strata_and_exposure.png"), width = 10)

```


```{r eval = T, include = T}
cover_by_station |> 
  inner_join(benthos_taxa) |> 
  left_join(uvs_meta |> 
              distinct(ps_site_id, island, habitat, exposure)) |> 
  group_by(island, group, taxon) |> 
  summarise(avg_cover = round(mean(p_cover), 1)) |> 
  pivot_wider(names_from = island, values_from = avg_cover) |> 
    gt::gt() |> 
  gt::tab_header(title = "Average bottom cover (%) by taxa and location") |> 
  opt_interactive()
```

### Hard coral

```{r eval = T, include = T}
cover_by_strata_and_group |> 
  left_join(uvs_meta |> distinct(ps_site_id, island, habitat, exposure)) |> 
  filter(group == "Hard coral") |> 
  ggplot()+
  geom_boxplot(aes(depth_strata, p_cover, fill = depth_strata))+
  facet_wrap("island")+
  ggthemes::theme_fivethirtyeight()+
  scale_fill_paletteer_d("ggthemr::light")+
  labs(fill = "",
       title = "% Hard coral cover by region and depth strata")

ggsave(file.path(exp_path, "figures/uvs_pc_hard_coral_by_region_and_strata.png"), width = 10)

```

```{r eval = T, include = T}
cover_by_strata_and_group |> 
  left_join(uvs_meta |> distinct(ps_site_id, island, habitat, exposure)) |> 
  filter(group == "Hard coral", island == "Beveridge") |> 
  ggplot()+
  geom_boxplot(aes(exposure, p_cover, fill = depth_strata))+
  ggthemes::theme_fivethirtyeight()+
  scale_fill_paletteer_d("ggthemr::light")+
  labs(fill = "",
       title = "% Hard coral cover by exposure and depth strata", 
       subtitle = "Beveridge reef")

ggsave(file.path(exp_path, "figures/uvs_pc_hard_coral_Beveridge_by_exposure_and_strata.png"), width = 10)

```

```{r eval = T, include = T}
cover_by_station |> 
  left_join(benthos_taxa) |> 
  filter(group == "Hard coral") |> 
  left_join(uvs_meta) |> 
  group_by(island, ps_site_id, family) |> 
  summarize(p_cover = sum(p_cover)) |> 
  ungroup() |> 
  group_by(island, family) |> 
  summarize(p_cover = mean(p_cover)) |> 
  ungroup() |> 
  filter(!is.na(family)) |> 
  ggplot()+
  geom_col(aes(island, p_cover, fill = family))+
  ggthemes::theme_fivethirtyeight()+
  scale_fill_manual(values = paletteer_d("ggsci::category20_d3", n = 15))+
  labs(fill = "", title = "Average hard coral cover by genus")

ggsave(file.path(exp_path, "figures/uvs_pc_hard_coral_by_genus.png"), width = 10)

```
```{r eval = T, include = T}
cover_by_strata |> 
  left_join(benthos_taxa) |> 
  filter(group == "Hard coral") |> 
  left_join(uvs_meta) |> 
  filter(island != "Antiope") |> 
  group_by(island, ps_site_id, depth_strata, family) |> 
  summarize(p_cover = sum(p_cover)) |> 
  ungroup() |> 
  group_by(island, depth_strata, family) |> 
  summarize(p_cover = mean(p_cover)) |> 
  ungroup() |> 
  filter(!is.na(family)) |> 
  ggplot()+
  geom_col(aes(depth_strata, p_cover, fill = family))+
  ggthemes::theme_fivethirtyeight()+
  scale_fill_manual(values = paletteer_d("ggsci::category20_d3", n = 15))+
  labs(fill = "", title = "Average hard coral cover by genus and depth strata")+
  facet_wrap("island")

ggsave(file.path(exp_path, "figures/uvs_pc_hard_coral_by_genus_and_strata.png"), width = 10)

```

### Community PCOA

#### By taxa 

```{r eval = T, include = T}
cover_by_site_wide <- cover_by_station |> 
  select(-pts) |> 
  pivot_wider(names_from = taxon, values_from = p_cover, values_fill = 0) %>% 
  column_to_rownames("ps_site_id") 

cover_dist <- vegan::vegdist(as.matrix(cover_by_site_wide), 
                             method = "bray") 

cover_pcoa_c <- vegan::dbrda(cover_dist ~ habitat + island + exposure, 
                             data = uvs_meta ,
                             dist = "bray", 
                             add = "lingoes")

cover_pcoa_c_env_fit <- vegan::envfit(cover_pcoa_c, 
                                      uvs_meta |> 
                                        select(habitat , island , exposure))

cover_pcoa_c_spp_fit <- vegan::envfit(cover_pcoa_c, 
                                      cover_by_site_wide)

cover_pcoa_c_spp_scores <- cover_pcoa_c_spp_fit %>% 
  vegan::scores("vectors") %>% 
  as_tibble(rownames = "ps_taxon_code") %>% 
  mutate(r = cover_pcoa_c_spp_fit$vectors$r,
         p = cover_pcoa_c_spp_fit$vectors$pvals) %>% 
  filter(p < 0.05, r > 0.1)

cover_pcoa_c_axis <- BiodiversityR::axis.long(cover_pcoa_c, choices = c(1, 2))

cover_pcoa_c_site_scores <- vegan::scores(cover_pcoa_c)$sites %>% 
  as_tibble(rownames = "ps_site_id") %>% 
  left_join(uvs_meta)

# anova(cover_pcoa_c) # overall test of the significant of the analysis
# anova(cover_pcoa_c, by = "axis", perm.max = 500) # test axes for significance
# anova(cover_pcoa_c, by = "terms", perm.max = 1000) # test for sign. environ. variables
```

```{r, eval = T, include = T}
cover_by_site_and_taxa_adonis <- vegan::adonis2(cover_dist ~  habitat + island, 
                                        data = uvs_meta ,
                                        by = "margin",
                                        method = "euclidean")

broom::tidy(cover_by_site_and_taxa_adonis) %>% 
  mutate_if(is.numeric, round, 3) %>% 
  reactable::reactable(defaultColDef = reactable::colDef(
    header = function(value) gsub("_", " ", value, fixed = TRUE),
    cell = function(value) format(value, nsmall = 1),
    align = "center",
    minWidth = 70,
    aggregate = "sum",
    headerStyle = list(background = "#f7f7f8")),
    bordered = TRUE,
    highlight = TRUE) %>% 
  reactablefmtr::add_title(title = "Benthic community (cover by taxa) adonis model")
```

```{r, eval = T, include = T}
ggplot() +
  geom_vline(xintercept = c(0), color = "grey70", linetype = 2) +
  geom_hline(yintercept = c(0), color = "grey70", linetype = 2) +  
  scale_x_continuous(sec.axis = dup_axis(labels=NULL, name=NULL)) +
  scale_y_continuous(sec.axis = dup_axis(labels=NULL, name=NULL)) +
  geom_point(data = cover_pcoa_c_site_scores,
             aes(x = dbRDA1, y = dbRDA2, col = island)) +
  labs(x = cover_pcoa_c_axis$label[1], y = cover_pcoa_c_axis$label[2])+
  geom_segment(data = cover_pcoa_c_spp_scores %>% 
                 filter(p < 0.05, r > 0.5), 
               aes(x = 0, y = 0, xend = dbRDA1*3, yend = dbRDA2*3, alpha = r), 
               colour = "black", 
               size = 0.2, 
               arrow = arrow(length = unit(0.01, "npc"), 
                             type = 'open', ends = "last"))+
      ggrepel::geom_text_repel(data = cover_pcoa_c_spp_scores %>% 
                                 filter(p < 0.05,  r > 0.5), 
                               aes(x=dbRDA1*3, y=dbRDA2*3, label = ps_taxon_code, alpha = r),
                               colour="black",
                               show.legend = F) +
      coord_fixed(ratio=1)+
      labs(color = "", alpha = bquote('R'^'2'))+
      ggforce::geom_mark_ellipse(data = cover_pcoa_c_site_scores, 
                                 aes(x=dbRDA1, y = dbRDA2, colour = island, 
                                     fill=after_scale(alpha(colour, 0.01))), 
                                 expand=0, size=0.2, show.legend=FALSE)+
      theme(panel.background = element_blank(),
            panel.border = element_blank(),
            panel.grid = element_blank(),
            axis.line = element_line("gray25"),
            text = element_text(size = 12, family = "Arial"),
            axis.text = element_text(size = 10, colour = "gray25"),
            axis.title = element_text(size = 12, colour = "gray25"),
            legend.key = element_blank())+
      PristineSeasR::scale_color_pristine_seas(palette = "alternative")+
      scale_alpha(range = c(0.6,1))

ggsave(file.path(exp_path, "figures", "uvs_benthos_pcoa_by_taxa_by_location.png"), width = 13)
```

#### By group 

```{r eval = T, include = T}
cover_by_site_by_group_wide <- cover_by_station_and_group |> 
  group_by(ps_site_id, group) %>% 
  summarize(p_cover = sum(p_cover)) |> 
  pivot_wider(names_from = group, values_from = p_cover, values_fill = 0) %>% 
  column_to_rownames("ps_site_id") 

cover_dist <- vegan::vegdist(as.matrix(cover_by_site_by_group_wide), 
                             method = "bray") 

cover_pcoa_c <- vegan::dbrda(cover_dist ~ habitat + island + exposure, 
                             data = uvs_meta ,
                             dist = "bray", 
                             add = "lingoes")

cover_pcoa_c_env_fit <- vegan::envfit(cover_pcoa_c, 
                                      uvs_meta |> 
                                        select(habitat , island , exposure))

cover_pcoa_c_spp_fit <- vegan::envfit(cover_pcoa_c, 
                                      cover_by_site_by_group_wide)

cover_pcoa_c_spp_scores <- cover_pcoa_c_spp_fit %>% 
  vegan::scores("vectors") %>% 
  as_tibble(rownames = "ps_taxon_code") %>% 
  mutate(r = cover_pcoa_c_spp_fit$vectors$r,
         p = cover_pcoa_c_spp_fit$vectors$pvals) %>% 
  filter(p < 0.05, r > 0.1)

cover_pcoa_c_axis <- BiodiversityR::axis.long(cover_pcoa_c, choices = c(1, 2))

cover_pcoa_c_site_scores <- vegan::scores(cover_pcoa_c)$sites %>% 
  as_tibble(rownames = "ps_site_id") %>% 
  left_join(uvs_meta)

# anova(cover_pcoa_c) # overall test of the significant of the analysis
# anova(cover_pcoa_c, by = "axis", perm.max = 500) # test axes for significance
# anova(cover_pcoa_c, by = "terms", perm.max = 1000) # test for sign. environ. variables
```

```{r, eval = T, include = T}
cover_by_site_and_taxa_adonis <- vegan::adonis2(cover_dist ~  habitat + island, 
                                        data = uvs_meta ,
                                        by = "margin",
                                        method = "euclidean")

broom::tidy(cover_by_site_and_taxa_adonis) %>% 
  mutate_if(is.numeric, round, 3) %>% 
  reactable::reactable(defaultColDef = reactable::colDef(
    header = function(value) gsub("_", " ", value, fixed = TRUE),
    cell = function(value) format(value, nsmall = 1),
    align = "center",
    minWidth = 70,
    aggregate = "sum",
    headerStyle = list(background = "#f7f7f8")),
    bordered = TRUE,
    highlight = TRUE) %>% 
  reactablefmtr::add_title(title = "Benthic community (cover by group) adonis model")
```

```{r, eval = T, include = T}
ggplot() +
  geom_vline(xintercept = c(0), color = "grey70", linetype = 2) +
  geom_hline(yintercept = c(0), color = "grey70", linetype = 2) +  
  scale_x_continuous(sec.axis = dup_axis(labels=NULL, name=NULL)) +
  scale_y_continuous(sec.axis = dup_axis(labels=NULL, name=NULL)) +
  geom_point(data = cover_pcoa_c_site_scores,
             aes(x = dbRDA1, y = dbRDA2, col = island)) +
  labs(x = cover_pcoa_c_axis$label[1], y = cover_pcoa_c_axis$label[2])+
  geom_segment(data = cover_pcoa_c_spp_scores %>% 
                 filter(p < 0.05), 
               aes(x = 0, y = 0, xend = dbRDA1*3, yend = dbRDA2*3, alpha = r), 
               colour = "black", 
               size = 0.2, 
               arrow = arrow(length = unit(0.01, "npc"), 
                             type = 'open', ends = "last"))+
      ggrepel::geom_text_repel(data = cover_pcoa_c_spp_scores %>% 
                                 filter(p < 0.05), 
                               aes(x=dbRDA1*3, y=dbRDA2*3, label = ps_taxon_code, alpha = r),
                               colour="black",
                               show.legend = F) +
      coord_fixed(ratio=1)+
      labs(color = "", alpha = bquote('R'^'2'))+
      ggforce::geom_mark_ellipse(data = cover_pcoa_c_site_scores, 
                                 aes(x=dbRDA1, y = dbRDA2, colour = island, 
                                     fill=after_scale(alpha(colour, 0.01))), 
                                 expand=0, size=0.2, show.legend=FALSE)+
      theme(panel.background = element_blank(),
            panel.border = element_blank(),
            panel.grid = element_blank(),
            axis.line = element_line("gray25"),
            text = element_text(size = 12, family = "Arial"),
            axis.text = element_text(size = 10, colour = "gray25"),
            axis.title = element_text(size = 12, colour = "gray25"),
            legend.key = element_blank())+
      PristineSeasR::scale_color_pristine_seas(palette = "alternative")+
      scale_alpha(range = c(0.6,1))

ggsave(file.path(exp_path, "figures", "uvs_benthos_pcoa_by_group_by_location.png"), width = 13)
```

## Changes since 2016

```{r eval = T}
uvs_meta_2016 <- readxl::read_xls(file.path(exp_path, 
                               "data/secondary/raw/2016-expedition/Niue_benthic_metadata.xls")) |> 
  janitor::clean_names() |> 
  mutate(ps_site_id = paste("NIU_2016_uvs", 
                               formatC(station, width = 2, flag = 0),
                               sep = "_"),
         habitat = str_to_sentence(habitat),
         island = str_to_sentence(reef)) |> 
  select(ps_site_id, everything(), -station, -reef)

pc_transects_2016 <- readxl::read_xlsx(file.path(exp_path,
                                            "data/primary/raw/benthos/Science_Kike_2016/"
                                            ,"Transsects-Niue.xlsx"),
                                  n_max = 2, 
                                  col_names = FALSE) %>%
  janitor::clean_names() %>%
  column_to_rownames(var = "x1") %>% 
  t() %>% 
  as_tibble() %>% 
  remove_rownames() %>% 
  janitor::clean_names() |> 
  set_names(c("site_number", "depth_m")) |> 
  mutate(ps_site_id = paste0("NIU_2016_uvs_",
                             formatC(as.numeric(str_extract(site_number, "[0-9]+")), width = 2,flag = 0))) |>
  group_by(ps_site_id, depth_m) |> 
  mutate(transect = LETTERS[row_number()]) |> 
  ungroup() |> 
  group_by(ps_site_id) |> 
  mutate(depth_strata = if_else(depth_m == min(depth_m), "Shallow", "Deep" ),
         depth_strata = if_else(depth_m %in% c(1,5), "Supershallow", depth_strata)) |> 
  ungroup() |> 
  select(ps_site_id, depth_strata, depth_m, transect) |> 
  arrange(ps_site_id)
```

```{r eval = T, include = T}
pc_taxa_2016 <- readxl::read_xlsx(file.path(exp_path,
                                       "data/primary/raw/benthos/Science_Kike_2016/"
                                       ,"Transsects-Niue.xlsx"),
                             skip = 3, 
                             col_names = F, 
                             range = "B6:C55") |> 
  janitor::clean_names() %>%
  set_names(c("group", "taxon")) |> 
  mutate(group = if_else(group != "CCA", str_to_sentence(group), group)) |> 
  arrange(taxon) |> 
  filter(!is.na(taxon))

pc_data_2016 <- readxl::read_xlsx(file.path(exp_path,
                                       "data/primary/raw/benthos/Science_Kike_2016/"
                                       ,"Transsects-Niue.xlsx"),
                             skip = 3, 
                             col_names = F, 
                             range = "C6:MT55") %>% 
  janitor::clean_names() %>% 
  filter(!is.na(x1), x1 != "TOTAL") %>% 
  column_to_rownames(var = "x1") %>% 
  t() %>% 
  as_tibble()

pc_data_2016 <- pc_transects_2016 |> 
  cbind(pc_data_2016) 

pc_data_2016 <- pc_data_2016 %>% 
  pivot_longer(-c(ps_site_id, depth_strata, depth_m, transect), 
               names_to = "taxon", 
               values_to = "pts") %>% 
  replace_na(list(pts = 0)) %>% 
  group_by(ps_site_id, depth_strata, depth_m, transect, taxon) %>% 
  summarise(pts = sum(pts)) %>% 
  ungroup() %>% 
  group_by(ps_site_id, depth_strata, depth_m, transect) %>% 
  mutate(p_cover = round(100*pts/sum(pts), 4)) %>% 
  ungroup() 

# pc_data_2016 %>% 
#   group_by(ps_site_id, depth_strata, transect) %>% 
#   summarise(p_cover = round(sum(p_cover)),
#             sum_pts = sum(pts)) %>% 
#   filter(p_cover != 100 | sum_pts != 50)
# 
# pc_transects_2016 %>% 
#   group_by(ps_site_id, depth_m) %>% 
#   filter(n_distinct(transect) != 5)
# 
# pc_data_2016 %>% 
#   filter(is.na(taxon))
```

```{r eval = T, include = T}
cover_by_strata_2016 <- pc_data_2016 |> 
  group_by(ps_site_id, depth_strata, depth_m, taxon) |> 
  summarise(p_cover = mean(p_cover),
            pts = sum(pts)) |> 
  ungroup() |> 
  left_join(uvs_meta_2016 |> distinct(ps_site_id, island, habitat))

cover_by_station_2016 <- pc_data_2016 |> 
  group_by(ps_site_id, taxon) |> 
  summarise(p_cover = mean(p_cover),
            pts = sum(pts)) |> 
  ungroup()|> 
  left_join(uvs_meta_2016 |> distinct(ps_site_id, island, habitat))

cover_by_station_and_group_2016 <- cover_by_station_2016 %>% 
  left_join(pc_taxa_2016) |>
  group_by(ps_site_id, group) %>% 
  summarize(p_cover = round(sum(p_cover), 3)) %>% 
  ungroup()|> 
  left_join(uvs_meta_2016 |> distinct(ps_site_id, island, habitat))

cover_by_strata_and_group_2016 <- cover_by_strata_2016 %>% 
  left_join(pc_taxa_2016) |>
  mutate(group = coalesce(group, taxon)) |> 
  group_by(ps_site_id, depth_m, depth_strata, group) %>% 
  summarize(p_cover = round(sum(p_cover), 3)) %>% 
  ungroup() |> 
  left_join(uvs_meta_2016 |> distinct(ps_site_id, island, habitat))
```

```{r eval = T, include = T}
cover_by_strata_and_group_combined <- uvs_meta |> 
  mutate(year = 2023) |> 
  distinct(year, ps_site_id, island, habitat) |> 
  left_join(cover_by_strata_and_group) |> 
  bind_rows(cover_by_strata_and_group_2016 |> 
              mutate(year = 2016) |> 
              mutate(depth_m = as.numeric(depth_m)))

cover_by_strata_and_group_combined |> 
  filter(island == "Beveridge") |> 
  mutate(year = factor(year)) |> 
  group_by(island, year, group, depth_strata) |> 
  summarize(p_cover = mean(p_cover)) |> 
  ggplot()+
  geom_col(aes(year, p_cover, fill = fct_reorder(group,p_cover, sum)))+
  scale_fill_paletteer_d("ggthemr::light")+
  ggthemes::theme_fivethirtyeight()+
  facet_wrap("depth_strata")+
  labs(title = "Changes in benthic cover 2016 - 2023", subtitle = "Beveridge reef", fill = "")

ggsave(file.path(exp_path, "figures/uvs_pc_Beveridge_changes_since_2016_strata.png"), width = 10)


cover_by_strata_and_group_combined |> 
  pivot_wider(names_from = group, values_from = p_cover) |> 
  write_csv(file.path(exp_path, "data/primary/output/benthic_cover_by_strata_2016_2023_combined.csv"))

```

```{r eval = T, include = T}
cover_by_strata_and_group_combined |> 
  filter(island == "Niue") |> 
  mutate(year = factor(year)) |> 
  group_by(island, year, group, depth_strata) |> 
  summarize(p_cover = mean(p_cover)) |> 
  ggplot()+
  geom_col(aes(year, p_cover, fill = fct_reorder(group,p_cover, sum)))+
  scale_fill_paletteer_d("ggthemr::light")+
  ggthemes::theme_fivethirtyeight()+
  facet_wrap("depth_strata")+
  labs(title = "Changes in benthic cover 2016 - 2023", subtitle = "Niue", fill = "")

ggsave(file.path(exp_path, "figures/uvs_pc_Niue_changes_since_2016_strata.png"), width = 10)

```

```{r eval = T, include = T}
cover_by_strata_and_group_combined |> 
  filter(island == "Beveridge",  group == "Hard coral") |> 
  ggplot()+
  geom_boxplot(aes(depth_strata, y = p_cover, fill = factor(year)))+
  facet_wrap("habitat")+
  scale_fill_paletteer_d("ggthemr::light")+
  ggthemes::theme_fivethirtyeight()+
  labs(title = "Hard coral cover 2016 - 2023", subtitle = "Beveridge reef", fill = "")

ggsave(file.path(exp_path, "figures/uvs_hard_coral_Beveridge_changes_since_2016.png"), width = 10)


cover_by_strata_and_group_combined |> 
  filter(island == "Niue",  group == "Hard coral") |> 
  ggplot()+
  geom_boxplot(aes(depth_strata, y = p_cover, fill = factor(year)))+
  facet_wrap("habitat")+
  scale_fill_paletteer_d("ggthemr::light")+
  ggthemes::theme_fivethirtyeight()+
  labs(title = "Hard coral cover 2016 - 2023", subtitle = "Niue", fill = "")

ggsave(file.path(exp_path, "figures/uvs_hard_coral_Niue_changes_since_2016.png"), width = 10)

```

```{r}
cover_by_strata_combined <- cover_by_strata |> 
  mutate(year = 2023) |> 
  left_join(uvs_meta |> distinct(ps_site_id, island)) |> 
  left_join(benthos_taxa |> distinct(taxon, group)) |> 
  bind_rows(cover_by_strata_2016 |> 
              mutate(year = 2013,
                     depth_m = as.numeric(depth_m)) |> 
              left_join(pc_taxa_2016 |> 
                          distinct(taxon, group))) |> 
  select(year, island, ps_site_id, depth_strata, group, everything(), -habitat, -depth_m) |> 
  mutate(group = coalesce(group, taxon))

cover_by_station_combined <- cover_by_station |> 
  mutate(year = 2023) |> 
  left_join(uvs_meta |> distinct(ps_site_id, island)) |> 
  left_join(benthos_taxa |> distinct(taxon, group)) |> 
  bind_rows(cover_by_station_2016 |> 
              mutate(year = 2013) |> 
              left_join(pc_taxa_2016|> distinct(taxon, group))) |> 
  select(year, island, ps_site_id, group, everything(), -habitat) |> 
  mutate(group = coalesce(group, taxon))

cover_by_strata_combined |> 
  write_csv(file.path(exp_path, "data/primary/output/benthic_cover_by_strata_and_taxa_2016_2023_combined.csv"))
```

# Macroinverts

```{r}
inverts_transects <- readxl::read_xlsx(file.path(exp_path,
                                                "data/primary/raw/benthos/Niue inverts data-2023.xlsx"),
                                      n_max = 2, 
                                      col_names = FALSE) |> 
  janitor::clean_names() %>%
  column_to_rownames(var = "x1") %>% 
  t() %>% 
  as_tibble() %>% 
  remove_rownames() %>% 
  janitor::clean_names() |> 
  set_names(c("survey", "depth_m")) |> 
  mutate(ps_site_id = paste0("NIU_uvs_",
                             formatC(as.numeric(str_extract(survey, "[0-9]+")), width = 2,flag = 0)),
         transect = str_extract(survey, "[A-Z]+")) |> 
  select(-survey) |> 
  group_by(ps_site_id) |> 
  mutate(depth_m = as.numeric(depth_m),
         depth_strata = if_else(depth_m < 5, "Supershallow",
                                if_else(depth_m == min(depth_m), "Shallow", "Deep"))) |> 
  ungroup() |> 
  select(ps_site_id, depth_strata) 

inverts_obs <- readxl::read_xlsx(file.path(exp_path,
                                       "data/primary/raw/benthos/Niue inverts data-2023.xlsx"),
                             skip = 2, 
                             col_names = F, 
                             range = "A3:BH43") %>% 
  janitor::clean_names() %>% 
  filter(!is.na(x1), x1 != "TOTAL") %>% 
  column_to_rownames(var = "x1") %>% 
  t() %>% 
  as_tibble()

inverts_obs <- inverts_transects |> 
  cbind(inverts_obs)

inverts_obs <- inverts_obs %>% 
  pivot_longer(-c(ps_site_id, depth_strata), 
               names_to = "taxon", 
               values_to = "n_ind") %>% 
  replace_na(list(n_ind = 0)) %>% 
  group_by(ps_site_id, depth_strata, taxon) %>% 
  summarise(n_ind = sum(n_ind)) %>% 
  ungroup() 
```

## Taxa

```{r}
inverts_taxa <- inverts_obs |> 
  distinct(taxon) |> 
  pull() |> 
  bdc::bdc_clean_names() |> 
  janitor::clean_names() %>% 
  select(taxon = scientific_name, 
         taxon_clean = names_clean) %>% 
  mutate(taxon_clean = coalesce(taxon_clean, 
                                taxadb::clean_names(taxon, lowercase = F))) %>% 
  distinct(taxon, taxon_clean) |> 
  mutate(taxon_clean = str_remove_all(taxon_clean,
                                      "unidentified") |> 
           str_squish()) 

not_algae_gnr <- inverts_taxa %>% 
  pull(taxon_clean) %>% 
  taxize::gnr_resolve(canonical = F,
                      with_canonical_ranks = T,
                      data_source_ids = c(9)) %>% # WORMS 
  filter(submitted_name != matched_name2) %>% 
  distinct(submitted_name, score, taxon_gnr = matched_name2)

not_algae_gnr$taxon_gnr[not_algae_gnr$submitted_name == "Chama lingula"] <- "Chama limbula"

inverts_taxa <- inverts_taxa %>% 
  left_join(not_algae_gnr,
            by = c("taxon_clean" = "submitted_name")) %>% 
  mutate(taxon_gnr = coalesce(taxon_gnr, taxon_clean)) %>% 
  select(-score)

inverts_taxa |> filter(taxon_gnr != taxon_clean)

taxonomy_worms <- inverts_taxa$taxon_gnr %>% 
  furrr::future_map(purrr::safely(worrms::wm_records_names))
  
taxonomy_worms <- transpose(taxonomy_worms)[["result"]] %>% 
  bind_rows() %>% 
  janitor::clean_names() %>% 
  filter(!is.na(scientificname)) %>% 
  mutate(rank = str_to_lower(rank),
         taxon_id = if_else(!is.na(valid_aphia_id),
                              paste0("WORMS:", valid_aphia_id),
                              NA_character_)) %>% 
  select(taxon_gnr = scientificname, status, taxon_valid_name = valid_name, taxon_rank = rank, taxon_id, taxon_authority = valid_authority, kingdom, phylum, class, order, family, genus) %>% 
  distinct() 

duped_taxa_worms <- taxonomy_worms %>% 
  janitor::get_dupes(taxon_gnr) 

deduped_taxa_worms <- duped_taxa_worms %>% 
  filter(status %in% c("accepted", "junior subjective synonym")) %>% 
  select(-dupe_count)

taxonomy_worms <- taxonomy_worms %>% 
  group_by(taxon_gnr) %>% 
  filter(n() <= 1) %>% # remove duplicates
  bind_rows(deduped_taxa_worms) # add deduped

taxonomy_worms %>% 
  filter(taxon_valid_name != taxon_gnr) 

inverts_taxa <- inverts_taxa %>% 
  left_join(taxonomy_worms) %>% 
  select(-taxon_clean)
```

```{r}
write_csv(inverts_obs, file.path(exp_path, "data/primary/processed/uvs_inverts_obs_clean.csv"))
write_csv(inverts_taxa, file.path(exp_path, "data/primary/processed/uvs_inverts_taxa.csv"))
```

```{r eval = T, include = T}
inverts_obs <- read_csv(file.path(exp_path, "data/primary/processed/uvs_inverts_obs_clean.csv"))
inverts_taxa <- read_csv(file.path(exp_path, "data/primary/processed/uvs_inverts_taxa.csv"))

inverts_taxa |> 
  group_by(class, family) |> 
  summarize(n_taxa = n_distinct(taxon)) |> 
  arrange(desc(n_taxa)) |> 
  filter(!is.na(family)) |> 
  ggplot(aes(area = n_taxa, 
             label = paste(family, n_taxa, sep = "\n"),
             fill = class,
             subgroup = class)) +
  treemapify::geom_treemap(show.legend = T, colour = "white")+
  treemapify::geom_treemap_text(colour = "white", 
                                place = "middle", 
                                reflow = T, 
                                min.size = 3)+
  treemapify::geom_treemap_subgroup_border(colour = "white", size = 4)+
  labs(fill = "", title = "")+
  ggthemes::theme_fivethirtyeight()+
  #scale_fill_manual(values = pc_group_palette)+
  scale_fill_paletteer_d("ggthemr::light")+
  bbplot::bbc_style()+
  guides(fill = guide_legend(nrow = 3, byrow = TRUE))+
  theme(legend.position = "bottom")

ggsave(file.path(exp_path, "figures/uvs_macroinverts_diversity_treemap.png"), width = 10)
```

```{r eval = T, include = T}
inverts_obs |> 
  left_join(uvs_meta) |> 
  group_by(island, taxon) |> 
  summarize(n_sites = n_distinct(ps_site_id[n_ind > 0]),
            n_ind = mean(n_ind)) |> 
  left_join(uvs_meta |> 
              group_by(island) |> 
              summarize(island_site = n_distinct(ps_site_id))) |> 
  mutate(freq_obs = round(100*n_sites/island_site)) |> 
  select(island, taxon, freq_obs, n_ind) |> 
  pivot_wider(names_from = island, values_from = c("freq_obs", "n_ind"), names_glue = "{island}.{.value}") |> 
  mutate_if(is.numeric, round, 2) |> 
  select(taxon, contains("anti"), contains("Beve"), contains("Niu")) |> 
  gt::gt() |> 
  gt::tab_spanner_delim(delim = ".") |> 
  gt::tab_header(title = "Macroinvertebrates abundance and frequency of observation")
```

## Diversity and abundance 

```{r eval = T, include = T}
inverts_summary_by_strata <- uvs_meta |> 
  select(ps_site_id, island, habitat, exposure) |> 
  left_join(inverts_obs |> 
              group_by(ps_site_id, depth_strata) |> 
              summarize(n_taxa = n_distinct(taxon[n_ind > 0]),
                        n_ind = sum(n_ind)))

inverts_summary_by_strata |> 
  left_join(uvs_meta) |> 
  ggplot()+
  geom_boxplot(aes(x = island, n_taxa, fill = depth_strata))+
    labs(fill = "", title = "Diversity (# species) of macroinvertebrates")+
  ggthemes::theme_fivethirtyeight()+
  scale_fill_paletteer_d("ggthemr::light")+
  guides(fill = guide_legend(nrow = 1, byrow = TRUE))+
  theme(legend.position = "bottom")

ggsave(file.path(exp_path, "figures/uvs_macroinverts_diversity.png"), width = 10)
```

```{r eval = T, include = T}
inverts_summary_by_strata |> 
  left_join(uvs_meta) |> 
  ggplot()+
  geom_boxplot(aes(x = island, n_ind, fill = depth_strata))+
  labs(fill = "", title = "Abundance (ind x 50m2) of macroinvertebrates")+
  ggthemes::theme_fivethirtyeight()+
  scale_fill_paletteer_d("ggthemr::light")+
  guides(fill = guide_legend(nrow = 1, byrow = TRUE))+
  theme(legend.position = "bottom")

ggsave(file.path(exp_path, "figures/uvs_macroinverts_abundance.png"), width = 10)

```

```{r eval = T, include = T}
library(randomcoloR)
n <- 28
palette <- distinctColorPalette(n)

inverts_obs |> 
  left_join(inverts_taxa |> select(taxon, class, family)) |> 
  group_by(ps_site_id, depth_strata, family) |> 
  summarize(n_ind = sum(n_ind)) |> 
  ungroup() |> 
  left_join(uvs_meta |> select(ps_site_id, island)) |> 
  group_by(island, family) |> 
  summarise(n_ind = mean(n_ind)) |> 
  ggplot()+
  geom_col(aes(island, y = n_ind, fill = fct_reorder(family, n_ind)))+
  ggthemes::theme_fivethirtyeight()+
  scale_fill_manual(values = palette, breaks= sort(unique(inverts_taxa$family)))+
  #scale_fill_paletteer_d("ggthemr::light")+
  labs(fill = "", title = "Mean macroinvertebrate abundance (ind x 50m2)")

ggsave(file.path(exp_path, "figures/uvs_macroinverts_abundance_by_family.png"), width = 10)

```

